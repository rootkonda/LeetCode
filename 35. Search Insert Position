/**
  Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.

  You may assume no duplicates in the array.
  
  Approach:
  
  Binary search yields the position of the target that needs to be inserted. We either use low+1 or high-1 pointer. **/
  
class Solution {
public:
    int searchInsert(vector<int>& nums, int target) 
    {
        int low=0;
        int len=nums.size();
        int high=len;
        while(low<high)
        {
            int mid=(low+high)>>1;
            if(nums[mid]==target)
                return mid;
            else if(nums[mid]>target)
                high=mid-1;
            else
                low=mid+1;
        }
        if(low<len)
        {
            if(nums[low]<target)
                return low+1;
        }
        return low;
    }
};
